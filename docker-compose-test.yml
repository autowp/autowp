version: "3.8"
services:

  backend-nginx:
    image: autowp/autowp:nginx
    container_name: autowp_test_backend_nginx
    restart: always
    environment:
      FASTCGI: backend:9000
    depends_on:
      - backend

  backend:
    image: autowp/autowp
    container_name: autowp_test_backend
    restart: always
    environment:
      CODECLIMATE_REPO_TOKEN: ${CODECLIMATE_REPO_TOKEN}
      TRAVIS: ${TRAVIS}
      TRAVIS_JOB_ID: ${TRAVIS_JOB_ID}
      TRAVIS_JOB_NUMBER: ${TRAVIS_JOB_NUMBER}
      TRAVIS_BRANCH: ${TRAVIS_BRANCH}
      TRAVIS_PULL_REQUEST: ${TRAVIS_PULL_REQUEST}
      TRAVIS_PULL_REQUEST_BRANCH: ${TRAVIS_PULL_REQUEST_BRANCH}
      TRAVIS_PULL_REQUEST_SHA: ${TRAVIS_PULL_REQUEST_SHA}
      TRAVIS_BUILD_NUMBER: ${TRAVIS_BUILD_NUMBER}
      TRAVIS_COMMIT: ${TRAVIS_COMMIT}
      TRAVIS_COMMIT_MESSAGE: ${TRAVIS_COMMIT_MESSAGE}
      TRAVIS_COMMIT_RANGE: ${TRAVIS_COMMIT_RANGE}
      TRAVIS_EVENT_TYPE: ${TRAVIS_EVENT_TYPE}
      TRAVIS_TAG: ${TRAVIS_TAG}
      CI: ${CI}
      CI_JOB_ID: ${CI_JOB_ID}
      CI_COMMIT_AUTHOR: ${CI_COMMIT_AUTHOR}
      CI_COMMIT_BEFORE_SHA: ${CI_COMMIT_BEFORE_SHA}
      CI_COMMIT_BRANCH: ${CI_COMMIT_BRANCH}
      CI_COMMIT_DESCRIPTION: ${CI_COMMIT_DESCRIPTION}
      CI_COMMIT_MESSAGE: ${CI_COMMIT_MESSAGE}
      CI_COMMIT_REF_SLUG: ${CI_COMMIT_REF_SLUG}
      CI_COMMIT_TIMESTAMP: ${CI_COMMIT_TIMESTAMP}
      CI_COMMIT_TITLE: ${CI_COMMIT_TITLE}
      CI_COMMIT_SHA: ${CI_COMMIT_SHA}
      CI_COMMIT_SHORT_SHA: ${CI_COMMIT_SHORT_SHA}
      CI_COMMIT_REF_NAME: ${CI_COMMIT_REF_NAME}
      CI_COMMIT_TAG: ${CI_COMMIT_TAG}
      CI_JOB_NAME: ${CI_JOB_NAME}
      CI_JOB_STAGE: ${CI_JOB_STAGE}
      CI_PIPELINE_ID: ${CI_PIPELINE_ID}
      CI_PIPELINE_IID: ${CI_PIPELINE_IID}
      CI_PROJECT_NAME: ${CI_PROJECT_NAME}
      CI_PROJECT_TITLE: ${CI_PROJECT_TITLE}
      CI_RUNNER_ID: ${CI_RUNNER_ID}
      CI_SERVER: ${CI_SERVER}
      CI_SERVER_URL: ${CI_SERVER_URL}
      CI_SERVER_HOST: ${CI_SERVER_HOST}
      CI_SERVER_PORT: ${CI_SERVER_PORT}
      CI_SERVER_PROTOCOL: ${CI_SERVER_PROTOCOL}
      CI_SERVER_NAME: ${CI_SERVER_NAME}
      CI_SERVER_REVISION: ${CI_SERVER_REVISION}
      CI_SERVER_VERSION: ${CI_SERVER_VERSION}
      CI_SERVER_VERSION_MAJOR: ${CI_SERVER_VERSION_MAJOR}
      CI_SERVER_VERSION_MINOR: ${CI_SERVER_VERSION_MINOR}
      CI_SERVER_VERSION_PATCH: ${CI_SERVER_VERSION_PATCH}
      GITLAB_CI: ${GITLAB_CI}
      GITLAB_USER_EMAIL: ${GITLAB_USER_EMAIL}
      GITLAB_USER_ID: ${GITLAB_USER_ID}
      AUTOWP_TWITTER_USERNAME: ""
      AUTOWP_TWITTER_OAUTH_KEY: ""
      AUTOWP_TWITTER_OAUTH_SECRET: ""
      AUTOWP_TWITTER_TOKEN_OAUTH: ""
      AUTOWP_TWITTER_TOKEN_OAUTH_SECRET: ""
      AUTOWP_FACEBOOK_APP_ID: ""
      AUTOWP_FACEBOOK_APP_SECRET: ""
      AUTOWP_FACEBOOK_PAGE_ACCESS_TOKEN: ""
      AUTOWP_VK_TOKEN: ""
      SONARCLOUD_TOKEN: ${SONARCLOUD_TOKEN}
    volumes:
    - ./config/autoload/local.php:/app/config/autoload/local.php:ro
    - ./module/Application/test/_files/image:/app/public_html/image
    - ./module/Application/test/_files/pictures:/app/public_html/pictures
    - ./sonar-project.properties:/app/sonar-project.properties:ro
    depends_on:
    - memcached
    - mysql
    - rabbitmq
    - goautowp-serve-private
    - minio
    - createbuckets

  memcached:
    image: memcached
    container_name: autowp_test_memcached
    restart: always
    expose:
    - "11211"

  mysql:
    image: mysql:8
    container_name: autowp_test_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: autowp_test
      MYSQL_USER: autowp_test
      MYSQL_PASSWORD: test
    volumes:
    - "./mysql.conf.d:/etc/mysql/conf.d"
    expose:
    - "3306"

  rabbitmq:
    image: rabbitmq
    container_name: autowp_test_rabbitmq

  traffic-postgres:
    image: postgres:13
    container_name: autowp_test_traffic_postgres
    restart: always
    environment:
      - POSTGRES_DB=traffic
      - POSTGRES_USER=traffic
      - POSTGRES_PASSWORD=password

  goautowp-serve-public:
    image: autowp/goautowp
    container_name: autowp_test_goautowp_serve_public
    restart: always
    command: serve-public
    depends_on:
      - rabbitmq
      - mysql
      - traffic-postgres
      - keycloak
    volumes:
      - "./goautowp/config.yaml:/config.yaml:ro"
      - "./module/Application/config/model.conf:/model.conf:ro"
      - "./module/Application/config/policy.csv:/policy.csv:ro"

  goautowp-serve-private:
    image: autowp/goautowp
    container_name: autowp_test_goautowp_serve_private
    restart: always
    command: serve-private
    depends_on:
      - rabbitmq
      - mysql
      - traffic-postgres
      - keycloak
    volumes:
      - "./goautowp/config.yaml:/config.yaml:ro"
      - "./module/Application/config/model.conf:/model.conf:ro"
      - "./module/Application/config/policy.csv:/policy.csv:ro"

  goautowp-listen-df-amqp:
    image: autowp/goautowp
    container_name: autowp_test_goautowp_listen_df_amqp
    restart: always
    command: listen-df-amqp
    depends_on:
      - rabbitmq
      - mysql
      - traffic-postgres
      - keycloak
    volumes:
      - "./goautowp/config.yaml:/config.yaml:ro"
      - "./module/Application/config/model.conf:/model.conf:ro"
      - "./module/Application/config/policy.csv:/policy.csv:ro"

  goautowp-listen-monitoring-amqp:
    image: autowp/goautowp
    container_name: autowp_test_goautowp_listen_monitoring_amqp
    restart: always
    command: listen-monitoring-amqp
    depends_on:
      - rabbitmq
      - mysql
      - traffic-postgres
      - keycloak
    volumes:
      - "./goautowp/config.yaml:/config.yaml:ro"
      - "./module/Application/config/model.conf:/model.conf:ro"
      - "./module/Application/config/policy.csv:/policy.csv:ro"

  goautowp-autoban:
    image: autowp/goautowp
    container_name: autowp_test_goautowp_autoban
    restart: always
    command: autoban
    depends_on:
      - rabbitmq
      - mysql
      - traffic-postgres
      - keycloak
    volumes:
      - "./goautowp/config.yaml:/config.yaml:ro"
      - "./module/Application/config/model.conf:/model.conf:ro"
      - "./module/Application/config/policy.csv:/policy.csv:ro"

  goautowp-auth:
    image: autowp/goautowp
    container_name: autowp_test_auth
    restart: always
    command: serve-auth
    volumes:
      - "./goautowp/config.yaml:/config.yaml:ro"
      - "./module/Application/config/model.conf:/model.conf:ro"
      - "./module/Application/config/policy.csv:/policy.csv:ro"
    depends_on:
    - auth-postgres
    - mysql
    - keycloak

  auth-postgres:
    image: postgres:12
    container_name: autowp_test_auth_postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=auth
      - POSTGRES_DB=auth
    ports:
      - "5432:5432"

  minio:
    image: minio/minio
    container_name: autowp_test_minio
    restart: always
    environment:
      - MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
      - MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    ports:
      - "9000:9000"
    volumes:
      - "./minio/data:/data"
    command: server /data

  createbuckets:
    image: minio/mc
    container_name: autowp_test_createbuckets
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      while ! /usr/bin/mc config host add autowp http://minio:9000 AKIAIOSFODNN7EXAMPLE wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY;
        do echo 'Wait minio to startup...' && sleep 1;
      done;
      /usr/bin/mc mb autowp/format;
      /usr/bin/mc policy set download autowp/format;
      /usr/bin/mc mb autowp/user;
      /usr/bin/mc policy set download autowp/user;
      /usr/bin/mc mb autowp/brand;
      /usr/bin/mc policy set download autowp/brand;
      /usr/bin/mc mb autowp/picture;
      /usr/bin/mc policy set download autowp/picture;
      /usr/bin/mc mb autowp/files;
      /usr/bin/mc policy set download autowp/files;
      exit 0;
      "

  keycloak:
    image: jboss/keycloak
    container_name: autowp_test_keycloak
    restart: always
    environment:
      DB_VENDOR: h2
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: password
      KEYCLOAK_IMPORT: /tmp/realm.json
      JAVA_OPTS_APPEND: "-Dkeycloak.profile.feature.upload_scripts=enabled"
    volumes:
      - ./keycloak/realm.json:/tmp/realm.json
