version: "3.8"
services:
  router:
    image: nginx:1-alpine
    container_name: autowp_test_router
    restart: always
    volumes:
    - ./router.conf:/etc/nginx/nginx.conf:ro
    depends_on:
    - backend
    - frontend
    - goautowp-public
    - auth
    ports:
    - "80:80"

  backend-nginx:
    image: autowp/autowp:nginx
    container_name: autowp_test_backend_nginx
    restart: always
    environment:
      FASTCGI: backend:9000
    depends_on:
    - backend

  backend:
    image: autowp/autowp
    container_name: autowp_test_backend
    restart: always
    environment:
      AUTOWP_USERS_SALT: "users-salt"
      AUTOWP_EMAIL_SALT: "email-salt"
      AUTOWP_TWITTER_USERNAME: ""
      AUTOWP_TWITTER_OAUTH_KEY: ""
      AUTOWP_TWITTER_OAUTH_SECRET: ""
      AUTOWP_TWITTER_TOKEN_OAUTH: ""
      AUTOWP_TWITTER_TOKEN_OAUTH_SECRET: ""
      AUTOWP_FACEBOOK_APP_ID: ""
      AUTOWP_FACEBOOK_APP_SECRET: ""
      AUTOWP_FACEBOOK_PAGE_ACCESS_TOKEN: ""
      AUTOWP_VK_TOKEN: ""
    volumes:
    - ./config:/app/config
    - ./data:/app/data
    - ./cache:/app/cache
    - ./module:/app/module
    - ./public_html:/app/public_html
    - ./vendor:/app/vendor
    - ./etc/nginx/conf.d:/etc/nginx/conf.d
    #- ./etc/php/7.3/fpm/php-fpm.conf:/etc/php/7.3/fpm/php-fpm.conf
    #- ./etc/php/7.3/fpm/pool.d/www.conf:/etc/php/7.3/fpm/pool.d/www.conf
    - ./etc/nginx/sites-available:/etc/nginx/sites-available
    #- ./etc/supervisor/conf.d/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
    - ./composer.json:/app/composer.json
    - ./composer.lock:/app/composer.lock
    - ./install-dev-db.sh:/app/install-dev-db.sh
    #- ./goautowp:/app/goautowp
    - ./start.sh:/app/start.sh
    depends_on:
    - memcached
    - mysql
    - rabbitmq
    - goautowp-private
    - minio
    - createbuckets

  memcached:
    image: memcached
    container_name: autowp_test_memcached
    restart: always
    expose:
    - "11211"

  mysql:
    image: mysql:8
    container_name: autowp_test_mysql
    restart: always
    environment:
    - MYSQL_ROOT_PASSWORD=password
    - MYSQL_DATABASE=autowp_test
    - MYSQL_USER=autowp_test
    - MYSQL_PASSWORD=test
    volumes:
    - "./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
    - "./mysql:/var/lib/mysql"
    - "./mysql.conf.d:/etc/mysql/conf.d"
    expose:
    - "3306"
    ports:
    - "3306:3306"

  frontend:
    image: autowp/autowp-frontend
    container_name: autowp_test_frontend
    restart: always
    volumes:
    - "./frontend/be-BY:/usr/share/nginx/html/be-BY"
    - "./frontend/en-GB:/usr/share/nginx/html/en-GB"
    - "./frontend/fr:/usr/share/nginx/html/fr"
    - "./frontend/pt-BR:/usr/share/nginx/html/pt-BR"
    - "./frontend/ru:/usr/share/nginx/html/ru"
    - "./frontend/uk:/usr/share/nginx/html/uk"
    - "./frontend/zh-CN:/usr/share/nginx/html/zh-CN"
    - "/home/dvp/WebstormProjects/autowp-frontend/etc/nginx/nginx.conf:/etc/nginx/nginx.conf"
    - "./hostmap:/etc/nginx/hostmap:ro"
    user: "101:101"

  rabbitmq:
    image: rabbitmq:management
    container_name: autowp_test_rabbitmq
    ports:
    - "5672:5672"
    - "15672:15672"

  traffic-postgres:
    image: postgres:13
    container_name: autowp_test_traffic_postgres
    restart: always
    environment:
    - POSTGRES_DB=traffic
    - POSTGRES_USER=traffic
    - POSTGRES_PASSWORD=password

  goautowp-public:
    image: autowp/goautowp
    container_name: autowp_test_goautowp_serve_public
    restart: always
    command: serve-public
    depends_on:
    - rabbitmq
    - mysql
    - traffic-postgres
    volumes:
    - "./goautowp/config.yaml:/config.yaml:ro"
    - "./module/Application/config/model.conf:/model.conf:ro"
    - "./module/Application/config/policy.csv:/policy.csv:ro"

  goautowp-private:
    image: autowp/goautowp
    container_name: autowp_test_goautowp_serve_private
    restart: always
    command: serve-private
    depends_on:
      - rabbitmq
      - mysql
      - traffic-postgres
    volumes:
      - "./goautowp/config.yaml:/config.yaml:ro"
      - "./module/Application/config/model.conf:/model.conf:ro"
      - "./module/Application/config/policy.csv:/policy.csv:ro"

  goautowp-listen-df-amqp:
    image: autowp/goautowp
    container_name: autowp_test_goautowp_listen_df_amqp
    restart: always
    command: listen-df-amqp
    depends_on:
      - rabbitmq
      - mysql
      - traffic-postgres
    volumes:
      - "./goautowp/config.yaml:/config.yaml:ro"
      - "./module/Application/config/model.conf:/model.conf:ro"
      - "./module/Application/config/policy.csv:/policy.csv:ro"

  goautowp-df-listen-amqp:
    image: autowp/goautowp
    container_name: autowp_test_goautowp_listen_monitoring_amqp
    restart: always
    command: listen-monitoring-amqp
    depends_on:
      - rabbitmq
      - mysql
      - traffic-postgres
    volumes:
      - "./goautowp/config.yaml:/config.yaml:ro"
      - "./module/Application/config/model.conf:/model.conf:ro"
      - "./module/Application/config/policy.csv:/policy.csv:ro"

  goautowp-autoban:
    image: autowp/goautowp
    container_name: autowp_test_goautowp_autoban
    restart: always
    command: autoban
    depends_on:
      - rabbitmq
      - mysql
      - traffic-postgres
    volumes:
      - "./goautowp/config.yaml:/config.yaml:ro"
      - "./module/Application/config/model.conf:/model.conf:ro"
      - "./module/Application/config/policy.csv:/policy.csv:ro"

  auth:
    image: autowp/auth
    container_name: autowp_test_auth
    restart: always
    volumes:
    - "./auth-config.yaml:/config.yaml:ro"
    depends_on:
    - auth-postgres
    - mysql
    expose:
    - "8080"
    ports:
    - "8080:8080"

  auth-postgres:
    image: postgres:12
    container_name: autowp_test_auth_postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=auth
      - POSTGRES_DB=auth
    ports:
      - "5432:5432"

  minio:
    image: minio/minio
    container_name: autowp_test_minio
    restart: always
    environment:
      - MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
      - MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    ports:
      - "9000:9000"
    volumes:
      - "./minio/data:/data"
    command: server /data

  createbuckets:
    image: minio/mc
    container_name: autowp_test_createbuckets
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      while ! /usr/bin/mc config host add autowp http://minio:9000 AKIAIOSFODNN7EXAMPLE wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY;
        do echo 'Wait minio to startup...' && sleep 1;
      done;
      /usr/bin/mc mb autowp/format;
      /usr/bin/mc policy set download autowp/format;
      /usr/bin/mc mb autowp/user;
      /usr/bin/mc policy set download autowp/user;
      /usr/bin/mc mb autowp/brand;
      /usr/bin/mc policy set download autowp/brand;
      /usr/bin/mc mb autowp/picture;
      /usr/bin/mc policy set download autowp/picture;
      /usr/bin/mc mb autowp/files;
      /usr/bin/mc policy set download autowp/files;
      exit 0;
      "
